name: Publish to PyPI and Docker Hub

on:
  push:
    branches:
      - main  # Adjust to the branches you want to trigger releases
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'  # Use the Python version you are targeting

      - name: Extract version from setup.py
        id: extract_version
        run: |
          VERSION=$(python -c "import re; version_line = next(line for line in open('setup.py') if line.strip().startswith('version=')); print(re.search(r'version=[\"\\']([^\"\\']+)[\"\\']', version_line).group(1))")
          echo "VERSION=$VERSION" >> $GITHUB_ENV
        shell: bash

      - name: Install dependencies
        run: pip install setuptools wheel twine

      - name: Build package
        run: python setup.py sdist bdist_wheel

      - name: Publish to Test PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_TOKEN }}
        run: |
          twine upload --repository-url https://test.pypi.org/legacy/ dist/*

      - name: Verify installation from Test PyPI
        run: |
          pip install --index-url https://test.pypi.org/simple/ uglypy --extra-index-url https://pypi.org/simple

      - name: Publish package to PyPI
        if: |
          github.event_name == 'push' &&
          github.ref == 'refs/heads/main' &&
          !contains(github.event.head_commit.message, 'pylint') &&
          !contains(github.event.head_commit.message, 'dependabot') &&
          !contains(github.event.head_commit.message, 'CodeQL') &&
          !contains(github.event.head_commit.message, 'chore') &&
          !contains(github.event.head_commit.message, 'ci') &&
          !contains(github.event.head_commit.message, '.md') &&
          !contains(github.event.head_commit.message, '.txt')
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          twine upload dist/*

      - name: Create GitHub Release
        if: |
          github.event_name == 'push' &&
          github.ref == 'refs/heads/main' &&
          !contains(github.event.head_commit.message, 'pylint') &&
          !contains(github.event.head_commit.message, 'dependabot') &&
          !contains(github.event.head_commit.message, 'CodeQL') &&
          !contains(github.event.head_commit.message, 'chore') &&
          !contains(github.event.head_commit.message, 'ci') &&
          !contains(github.event.head_commit.message, '.md') &&
          !contains(github.event.head_commit.message, '.txt')
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          release_name: Release ${{ env.VERSION }}
          body: |
            ## Changes in this Release
            - Automatically generated release based on the following commit: ${{ github.sha }}
            - Commit message: ${{ github.event.head_commit.message }}
          draft: false
          prerelease: false

      - name: Build Docker image
        if: |
          github.event_name == 'push' &&
          github.ref == 'refs/heads/main' &&
          !contains(github.event.head_commit.message, 'pylint') &&
          !contains(github.event.head_commit.message, 'dependabot') &&
          !contains(github.event.head_commit.message, 'CodeQL') &&
          !contains(github.event.head_commit.message, 'chore') &&
          !contains(github.event.head_commit.message, 'ci') &&
          !contains(github.event.head_commit.message, '.md') &&
          !contains(github.event.head_commit.message, '.txt')
        run: |
          docker build -t fabriziosalmi/uglyfeed:latest .

      - name: Push Docker image
        if: |
          github.event_name == 'push' &&
          github.ref == 'refs/heads/main' &&
          !contains(github.event.head_commit.message, 'pylint') &&
          !contains(github.event.head_commit.message, 'dependabot') &&
          !contains(github.event.head_commit.message, 'CodeQL') &&
          !contains(github.event.head_commit.message, 'chore') &&
          !contains(github.event.head_commit.message, 'ci') &&
          !contains(github.event.head_commit.message, '.md') &&
          !contains(github.event.head_commit.message, '.txt')
        run: |
          docker tag fabriziosalmi/uglyfeed:latest fabriziosalmi/uglyfeed:${{ env.VERSION }}
          echo $DOCKER_HUB_PASSWORD | docker login --username $DOCKER_HUB_USERNAME --password-stdin
          docker push fabriziosalmi/uglyfeed:${{ env.VERSION }}
          docker push fabriziosalmi/uglyfeed:latest
